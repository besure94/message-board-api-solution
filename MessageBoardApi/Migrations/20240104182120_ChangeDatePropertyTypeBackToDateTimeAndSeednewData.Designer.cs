// <auto-generated />
using System;
using MessageBoardApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MessageBoardApi.Migrations
{
    [DbContext(typeof(MessageBoardApiContext))]
    [Migration("20240104182120_ChangeDatePropertyTypeBackToDateTimeAndSeednewData")]
    partial class ChangeDatePropertyTypeBackToDateTimeAndSeednewData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MessageBoardApi.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Group")
                        .HasColumnType("longtext");

                    b.Property<string>("UserMessage")
                        .HasColumnType("longtext");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            Author = "newbieDrummer99",
                            Date = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Group = "Music Makers",
                            UserMessage = "Best drum kit for a beginner?"
                        },
                        new
                        {
                            MessageId = 2,
                            Author = "gamerchick",
                            Date = new DateTime(2023, 11, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            Group = "PC Gamers",
                            UserMessage = "Favorite loadout for Overwatch?"
                        },
                        new
                        {
                            MessageId = 3,
                            Author = "nightryder82",
                            Date = new DateTime(2019, 12, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Group = "Cycling Enthusiasts",
                            UserMessage = "Looking for rain-resistant tires for my bike"
                        },
                        new
                        {
                            MessageId = 4,
                            Author = "muddyB00tz",
                            Date = new DateTime(1988, 6, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Group = "Hiking fanatics",
                            UserMessage = "Best hiking trails in Cascade mountain range?"
                        },
                        new
                        {
                            MessageId = 5,
                            Author = "StampNerd",
                            Date = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            Group = "Stamp collectors",
                            UserMessage = "Can someone tell me the year of this stamp?"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
